User creation in AWS and create accesskey and secret key for it.

We will use this accesskey and secret key in the terraform configuration file.


You will be connected to AWS management:

In the search box, give IAM and select it.
You will be on IAM dashboard

On the left side→ click on Users→ Click on ADD user button →under user details give User name as Terraform → click on next →select 3rd option Attach policies directly →scroll down and from list click on AdministratorAccess →Scroll down → click next → scroll down and click on Create User.

Click on the user name Terraform →Click on security credentials tab→ scroll down to access key→ click on create access key→Click on Command Line Interface (CLI) → Scroll down→Select the box of→ I understand the above recommendation and want to proceed to create an access key. → click on next → click on create access key


Configure AWS CLI on the lab machine, and save the access key and secret key on the lab


# aws configure

Give the valid access key

Give the valid secret key

Press enter, no need to give any region and format option

=========================================================

# mkdir terraformProject

# cd terraformProject

# vim aws-infra.tf

provider "aws" {
  region = "us-east-1"
  shared_credentials_files = ["~/.aws/credentials"]

}


resource "aws_vpc" "sl-vpc" {
  cidr_block       = "10.0.0.0/16"
   tags = {
    Name = "sl-vpc"
  }
}

resource "aws_subnet" "subnet-1" {
  vpc_id     = aws_vpc.sl-vpc.id
  cidr_block = "10.0.1.0/24"
  depends_on = [aws_vpc.sl-vpc]
  map_public_ip_on_launch = true
  tags = {
    Name = "sl-subnet"
  }
}

resource "aws_route_table" "sl-route-table" {
  vpc_id = aws_vpc.sl-vpc.id
  tags = {
   Name = "sl-route-table"
}
}


resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.subnet-1.id
  route_table_id = aws_route_table.sl-route-table.id
}


Save the file

# terraform init

# terraform apply --auto-approve












